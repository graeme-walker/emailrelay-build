# src/glib/makefile -- generated by ..\emailrelay\libexec\make2nmake

ARCH = x86
CONFIG = release
MBEDTLS_SRC_ROOT = ../../../mbedtls
MBEDTLS_BUILD_ROOT = ../../../mbedtls-$(ARCH)
QT_SRC_ROOT = ../../../qt-$(ARCH)
QT_BUILD_ROOT = ../../../qt-$(ARCH)
QT_MOC = $(QT_BUILD_ROOT)/bin/moc.exe
SRC_ROOT = ../../..\emailrelay
BUILD_ROOT = ../..

all: subdirs libs programs

subdirs:

libs: glib.lib

glibextra.lib: 
    link /lib /nologo /out:glibextra.lib 

glib.lib: gmsg_win32.obj ggettext_none.obj garg.obj gbase64.obj gdate.obj gdatetime.obj gdirectory.obj genvironment.obj gexception.obj gexecutablecommand.obj gfile.obj gformat.obj ggetopt.obj ghash.obj glog.obj glogstream.obj glogoutput.obj gmd5.obj goption.obj goptionmap.obj goptionparser.obj goptionreader.obj goptions.obj goptionsusage.obj gpath.obj gpidfile.obj grandom.obj greadwrite.obj groot.obj gslot.obj gstatemachine.obj gstr.obj gstringlist.obj gstringwrap.obj gstringview.obj gtest.obj gthread.obj gtime.obj gxtext.obj gbatchfile.obj gmapfile.obj gcleanup_win32.obj gconvert.obj gconvert_win32.obj gdaemon_win32.obj gdirectory_win32.obj genvironment_win32.obj gfile_win32.obj ghostname_win32.obj gidentity_win32.obj glogoutput_win32.obj gnewprocess_win32.obj gprocess_win32.obj gpam_none.obj
    link /lib /nologo /out:glib.lib gmsg_win32.obj ggettext_none.obj garg.obj gbase64.obj gdate.obj gdatetime.obj gdirectory.obj genvironment.obj gexception.obj gexecutablecommand.obj gfile.obj gformat.obj ggetopt.obj ghash.obj glog.obj glogstream.obj glogoutput.obj gmd5.obj goption.obj goptionmap.obj goptionparser.obj goptionreader.obj goptions.obj goptionsusage.obj gpath.obj gpidfile.obj grandom.obj greadwrite.obj groot.obj gslot.obj gstatemachine.obj gstr.obj gstringlist.obj gstringwrap.obj gstringview.obj gtest.obj gthread.obj gtime.obj gxtext.obj gbatchfile.obj gmapfile.obj gcleanup_win32.obj gconvert.obj gconvert_win32.obj gdaemon_win32.obj gdirectory_win32.obj genvironment_win32.obj gfile_win32.obj ghostname_win32.obj gidentity_win32.obj glogoutput_win32.obj gnewprocess_win32.obj gprocess_win32.obj gpam_none.obj

programs: 

CPPFLAGS = /nologo /DGCONFIG_NO_GCONFIG_DEFS /DG_QT_STATIC /EHsc /I. /DG_WINDOWS=1 /DWIN32 /D_WINDOWS /DNDEBUG /W4 /WX /MT /O2 /Ob2 /I. /I..

garg.obj: $(SRC_ROOT)/src/glib/garg.cpp
    $(CPP) $(CPPFLAGS) /c $?

gbase64.obj: $(SRC_ROOT)/src/glib/gbase64.cpp
    $(CPP) $(CPPFLAGS) /c $?

gbatchfile.obj: $(SRC_ROOT)/src/glib/gbatchfile.cpp
    $(CPP) $(CPPFLAGS) /c $?

gcleanup_win32.obj: $(SRC_ROOT)/src/glib/gcleanup_win32.cpp
    $(CPP) $(CPPFLAGS) /c $?

gconvert.obj: $(SRC_ROOT)/src/glib/gconvert.cpp
    $(CPP) $(CPPFLAGS) /c $?

gconvert_win32.obj: $(SRC_ROOT)/src/glib/gconvert_win32.cpp
    $(CPP) $(CPPFLAGS) /c $?

gdaemon_win32.obj: $(SRC_ROOT)/src/glib/gdaemon_win32.cpp
    $(CPP) $(CPPFLAGS) /c $?

gdate.obj: $(SRC_ROOT)/src/glib/gdate.cpp
    $(CPP) $(CPPFLAGS) /c $?

gdatetime.obj: $(SRC_ROOT)/src/glib/gdatetime.cpp
    $(CPP) $(CPPFLAGS) /c $?

gdirectory.obj: $(SRC_ROOT)/src/glib/gdirectory.cpp
    $(CPP) $(CPPFLAGS) /c $?

gdirectory_win32.obj: $(SRC_ROOT)/src/glib/gdirectory_win32.cpp
    $(CPP) $(CPPFLAGS) /c $?

genvironment.obj: $(SRC_ROOT)/src/glib/genvironment.cpp
    $(CPP) $(CPPFLAGS) /c $?

genvironment_win32.obj: $(SRC_ROOT)/src/glib/genvironment_win32.cpp
    $(CPP) $(CPPFLAGS) /c $?

gexception.obj: $(SRC_ROOT)/src/glib/gexception.cpp
    $(CPP) $(CPPFLAGS) /c $?

gexecutablecommand.obj: $(SRC_ROOT)/src/glib/gexecutablecommand.cpp
    $(CPP) $(CPPFLAGS) /c $?

gfile.obj: $(SRC_ROOT)/src/glib/gfile.cpp
    $(CPP) $(CPPFLAGS) /c $?

gfile_win32.obj: $(SRC_ROOT)/src/glib/gfile_win32.cpp
    $(CPP) $(CPPFLAGS) /c $?

gformat.obj: $(SRC_ROOT)/src/glib/gformat.cpp
    $(CPP) $(CPPFLAGS) /c $?

ggetopt.obj: $(SRC_ROOT)/src/glib/ggetopt.cpp
    $(CPP) $(CPPFLAGS) /c $?

ggettext_none.obj: $(SRC_ROOT)/src/glib/ggettext_none.cpp
    $(CPP) $(CPPFLAGS) /c $?

ghash.obj: $(SRC_ROOT)/src/glib/ghash.cpp
    $(CPP) $(CPPFLAGS) /c $?

ghostname_win32.obj: $(SRC_ROOT)/src/glib/ghostname_win32.cpp
    $(CPP) $(CPPFLAGS) /c $?

gidentity_win32.obj: $(SRC_ROOT)/src/glib/gidentity_win32.cpp
    $(CPP) $(CPPFLAGS) /c $?

glog.obj: $(SRC_ROOT)/src/glib/glog.cpp
    $(CPP) $(CPPFLAGS) /c $?

glogoutput.obj: $(SRC_ROOT)/src/glib/glogoutput.cpp
    $(CPP) $(CPPFLAGS) /c $?

glogoutput_win32.obj: $(SRC_ROOT)/src/glib/glogoutput_win32.cpp
    $(CPP) $(CPPFLAGS) /c $?

glogstream.obj: $(SRC_ROOT)/src/glib/glogstream.cpp
    $(CPP) $(CPPFLAGS) /c $?

gmapfile.obj: $(SRC_ROOT)/src/glib/gmapfile.cpp
    $(CPP) $(CPPFLAGS) /c $?

gmd5.obj: $(SRC_ROOT)/src/glib/gmd5.cpp
    $(CPP) $(CPPFLAGS) /c $?

gmsg_win32.obj: $(SRC_ROOT)/src/glib/gmsg_win32.cpp
    $(CPP) $(CPPFLAGS) /c $?

gnewprocess_win32.obj: $(SRC_ROOT)/src/glib/gnewprocess_win32.cpp
    $(CPP) $(CPPFLAGS) /c $?

goption.obj: $(SRC_ROOT)/src/glib/goption.cpp
    $(CPP) $(CPPFLAGS) /c $?

goptionmap.obj: $(SRC_ROOT)/src/glib/goptionmap.cpp
    $(CPP) $(CPPFLAGS) /c $?

goptionparser.obj: $(SRC_ROOT)/src/glib/goptionparser.cpp
    $(CPP) $(CPPFLAGS) /c $?

goptionreader.obj: $(SRC_ROOT)/src/glib/goptionreader.cpp
    $(CPP) $(CPPFLAGS) /c $?

goptions.obj: $(SRC_ROOT)/src/glib/goptions.cpp
    $(CPP) $(CPPFLAGS) /c $?

goptionsusage.obj: $(SRC_ROOT)/src/glib/goptionsusage.cpp
    $(CPP) $(CPPFLAGS) /c $?

gpam_none.obj: $(SRC_ROOT)/src/glib/gpam_none.cpp
    $(CPP) $(CPPFLAGS) /c $?

gpath.obj: $(SRC_ROOT)/src/glib/gpath.cpp
    $(CPP) $(CPPFLAGS) /c $?

gpidfile.obj: $(SRC_ROOT)/src/glib/gpidfile.cpp
    $(CPP) $(CPPFLAGS) /c $?

gprocess_win32.obj: $(SRC_ROOT)/src/glib/gprocess_win32.cpp
    $(CPP) $(CPPFLAGS) /c $?

grandom.obj: $(SRC_ROOT)/src/glib/grandom.cpp
    $(CPP) $(CPPFLAGS) /c $?

greadwrite.obj: $(SRC_ROOT)/src/glib/greadwrite.cpp
    $(CPP) $(CPPFLAGS) /c $?

groot.obj: $(SRC_ROOT)/src/glib/groot.cpp
    $(CPP) $(CPPFLAGS) /c $?

gslot.obj: $(SRC_ROOT)/src/glib/gslot.cpp
    $(CPP) $(CPPFLAGS) /c $?

gstatemachine.obj: $(SRC_ROOT)/src/glib/gstatemachine.cpp
    $(CPP) $(CPPFLAGS) /c $?

gstr.obj: $(SRC_ROOT)/src/glib/gstr.cpp
    $(CPP) $(CPPFLAGS) /c $?

gstringlist.obj: $(SRC_ROOT)/src/glib/gstringlist.cpp
    $(CPP) $(CPPFLAGS) /c $?

gstringview.obj: $(SRC_ROOT)/src/glib/gstringview.cpp
    $(CPP) $(CPPFLAGS) /c $?

gstringwrap.obj: $(SRC_ROOT)/src/glib/gstringwrap.cpp
    $(CPP) $(CPPFLAGS) /c $?

gtest.obj: $(SRC_ROOT)/src/glib/gtest.cpp
    $(CPP) $(CPPFLAGS) /c $?

gthread.obj: $(SRC_ROOT)/src/glib/gthread.cpp
    $(CPP) $(CPPFLAGS) /c $?

gtime.obj: $(SRC_ROOT)/src/glib/gtime.cpp
    $(CPP) $(CPPFLAGS) /c $?

gxtext.obj: $(SRC_ROOT)/src/glib/gxtext.cpp
    $(CPP) $(CPPFLAGS) /c $?


